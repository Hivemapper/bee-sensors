# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: framemetadata.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x66ramemetadata.proto\"\xf2\x03\n\rFrameMetadata\x12\x13\n\x0bsystem_time\x18\x01 \x01(\t\x12\x10\n\x08utc_time\x18\x02 \x01(\t\x12\x11\n\tuptime_ms\x18\x03 \x01(\x01\x12\x10\n\x08latitude\x18\x04 \x01(\x01\x12\x11\n\tlongitude\x18\x05 \x01(\x01\x12\x10\n\x08\x61ltitude\x18\x06 \x01(\x01\x12\r\n\x05speed\x18\x07 \x01(\x01\x12\x0f\n\x07heading\x18\x08 \x01(\x01\x12\x1b\n\x13\x64istance_traveled_m\x18\t \x01(\x01\x12\x15\n\rframe_delta_m\x18\n \x01(\x01\x12\x0b\n\x03\x65ph\x18\x0b \x01(\x01\x12\x0c\n\x04hdop\x18\x0c \x01(\x01\x12\x0c\n\x04vdop\x18\r \x01(\x01\x12\x0c\n\x04xdop\x18\x0e \x01(\x01\x12\x0c\n\x04ydop\x18\x0f \x01(\x01\x12\x0c\n\x04tdop\x18\x10 \x01(\x01\x12\x0c\n\x04pdop\x18\x11 \x01(\x01\x12\x0c\n\x04gdop\x18\x12 \x01(\x01\x12\x17\n\x0fsatellites_used\x18\x13 \x01(\x05\x12\x0b\n\x03\x63no\x18\x14 \x01(\x01\x12\x16\n\x0epos_confidence\x18\x15 \x01(\x01\x12\x12\n\nrf_jam_ind\x18\x16 \x01(\x05\x12\r\n\x05\x61\x63\x63_x\x18\x17 \x01(\x01\x12\r\n\x05\x61\x63\x63_y\x18\x18 \x01(\x01\x12\r\n\x05\x61\x63\x63_z\x18\x19 \x01(\x01\x12\x0e\n\x06gyro_x\x18\x1a \x01(\x01\x12\x0e\n\x06gyro_y\x18\x1b \x01(\x01\x12\x0e\n\x06gyro_z\x18\x1c \x01(\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'framemetadata_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _FRAMEMETADATA._serialized_start=24
  _FRAMEMETADATA._serialized_end=522
# @@protoc_insertion_point(module_scope)
